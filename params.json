{
  "name": "Compodoc",
  "tagline": "The missing documentation tool for your Angular 2 application",
  "body": "<p align=\"center\">\r\n  <img src=\"https://avatars3.githubusercontent.com/u/23202313\" alt=\"Compodoc: The missing documentation tool for your Angular 2 application\" width=\"226\">\r\n  <br>\r\n  <a href=\"https://travis-ci.org/compodoc/compodoc\"><img src=\"https://travis-ci.org/compodoc/compodoc.svg?branch=develop\" alt=\"Build Status\"></a>\r\n  <a href=\"https://ci.appveyor.com/project/vogloblinsky/compodoc/branch/develop\"><img src=\"https://ci.appveyor.com/api/projects/status/0wkundlfn3vs6r3m/branch/develop?svg=true\" alt=\"Build Status\"></a>\r\n  <a href=\"https://codecov.io/gh/compodoc/compodoc\"><img src=\"https://codecov.io/gh/compodoc/compodoc/branch/develop/graph/badge.svg\" alt=\"Codecov\"/></a>\r\n  <a href=\"https://www.npmjs.com/package/compodoc\"><img src=\"https://badge.fury.io/js/compodoc.svg\" alt=\"npm badge\"></a>\r\n  <a href=\"https://david-dm.org/compodoc/compodoc\"><img src=\"https://david-dm.org/compodoc/compodoc.svg\" alt=\"npm dependencies\"></a>\r\n  <a href=\"https://david-dm.org/compodoc/compodoc?type=dev\"><img src=\"https://david-dm.org/compodoc/compodoc/dev-status.svg\" alt=\"npm devDependencies\"></a>\r\n  <a href=\"http://opensource.org/licenses/MIT\"><img src=\"http://img.shields.io/badge/license-MIT-brightgreen.svg\" alt=\"MIT badge\"></a>\r\n</p>\r\n\r\n<p align=\"center\">The missing documentation tool for your Angular 2 application</p>\r\n\r\nFeatures\r\n------------\r\n\r\n* **Clean, simple design** — With Compodoc, the main endpoints are on the left side of your documentation, and all the content on the right side\r\n\r\n* **Beautiful themes** — 7 themes are available from famous documentation tools like Gitbook, readthedocs or projects like Vagrant, Laravel, Postmark and Stripe.\r\n\r\n* **Automatic table of contents** - API table of contents is generated using elements found during files parsing\r\n\r\n* **Compodoc is open-source and on npm** - Use it directly in your project using npm and one script, that's it !\r\n\r\n## Live Demo\r\n\r\n[Demo](https://compodoc.github.io/compodoc-demo-todomvc-angular2/) : documentation generated for [TodoMVC Angular 2 Compodoc demo](https://github.com/compodoc/compodoc-demo-todomvc-angular2)\r\n\r\n## Static Demo\r\n\r\nUsing [SoundCloud API client / Angular2 project](https://github.com/r-park/soundcloud-ngrx) and default theme (gitbook)\r\n\r\nREADME page             |  Overview page\r\n:-------------------------:|:-------------------------:\r\n![screenshot-1](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/1.png)  | ![screenshot-2](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/2.png)\r\nModules page             |  Single module page\r\n![screenshot-3](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/3.png)  | ![screenshot-4](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/4.png)\r\nComponent page             |  \r\n![screenshot-5](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/5.png)  |\r\n\r\n# Table of Contents\r\n\r\n- [Getting Started with compodoc](#getting-started-with-compodoc)\r\n  - [Install](#install)\r\n  - [Usage](#usage)\r\n  - [Local installation](#local-installation)\r\n- [Themes](#themes)\r\n- [Common use cases](#common-use-cases)\r\n  - [Render documentation](#render-documentation)\r\n  - [Serve generated documentation with compodoc](#serve-generated-documentation-with-compodoc)\r\n  - [Render documentation, and serve it with compodoc](#render-documentation-and-serve-it-with-compodoc)\r\n  - [Styling the documentation](#styling-hte-documentation)\r\n  - [Documentation of each component](#documentation-of-each-component)\r\n  - [Syntax highlighting in markdown files](#syntax-highlighting-in-markdown-files)\r\n- [Remark for routes](#remark-for-routes)\r\n- [Why this tool ?](#why-this-tool-)\r\n- [Why not a SPA for outputed documentation ?](#why-not-a-spa-for-outputed-documentation-)\r\n- [Roadmap](#roadmap)\r\n- [Contributors](#contributors)\r\n- [Resources](#resources)\r\n- [License](#license)\r\n\r\n## Getting Started with compodoc\r\n\r\n### Install\r\n\r\nInstall from npm :\r\n\r\n```\r\nnpm install -g compodoc\r\n```\r\n\r\n### Usage\r\n\r\n```\r\n$ compodoc --help\r\n\r\nUsage: compodoc [options]\r\n\r\nOptions:\r\n\r\n  -h, --help                output usage information\r\n  -V, --version             output the version number\r\n  -p, --tsconfig [config]   A tsconfig.json file\r\n  -d, --output [folder]     Where to store the generated documentation\r\n  -b, --base [base]         Base reference of html tag <base>\r\n  -y, --extTheme [file]     External styling theme\r\n  -h, --theme [theme]       Choose one of available themes, default is 'gitbook' (laravel, original, postmark, readthedocs, stripe, vagrant)\r\n  -n, --name [name]         Title documentation\r\n  -o, --open                Open the generated documentation\r\n  -t, --silent              In silent mode, log messages aren't logged in the console\r\n  -s, --serve               Serve generated documentation (default http://localhost:8080/)\r\n  -g, --hideGenerator       Do not print the Compodoc link at the bottom of the page\r\n```\r\n\r\n### Local installation\r\n\r\n```\r\nnpm install --save-dev compodoc\r\n```\r\n\r\nDefine a script task for it in your package.json :\r\n\r\n```\r\n\"scripts\": {\r\n  \"compodoc\": \"./node_modules/.bin/compodoc -p src/tsconfig.json\"\r\n}\r\n```\r\n\r\nand run it like a normal npm script :\r\n\r\n```\r\nnpm run compodoc\r\n```\r\n\r\n## Themes\r\n\r\nDefault (gitbook)             |  Laravel\r\n:-------------------------:|:-------------------------:\r\n![theme-gitbook](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/theme-gitbook.png)  | ![theme-laravel](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/theme-laravel.png)\r\nReadthedocs             |  Stripe\r\n![theme-readthedocs](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/theme-readthedocs.png)  | ![theme-stripe](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/theme-stripe.png)\r\nVagrant             |  Postmark\r\n![theme-vagrant](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/theme-vagrant.png)  | ![theme-postmark](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/theme-postmark.png)\r\nOriginal             |  \r\n![theme-original](https://raw.githubusercontent.com/groupe-sii/compodoc/master/screenshots/theme-original.png)  |\r\n\r\n## Common use cases\r\n\r\n### Render documentation\r\n\r\nDocumentation is generated in default output folder, then run your HTTP server in that folder.\r\n\r\n```\r\ncompodoc -p src/tsconfig.json\r\n```\r\n\r\n### Serve generated documentation with compodoc\r\n\r\nDocumentation was generated in default output folder or a specific one, the local HTTP server is launched at [http://localhost:8080](http://localhost:8080)\r\n\r\n```\r\ncompodoc -s\r\n\r\nor\r\n\r\ncompodoc -s -d ./doc\r\n```\r\n\r\n### Render documentation, and serve it with compodoc\r\n\r\nDocumentation is generated in default output folder, and a local HTTP server is available at [http://localhost:8080](http://localhost:8080)\r\n\r\n```\r\ncompodoc -p src/tsconfig.json -s\r\n```\r\n\r\n### Styling the documentation\r\n```\r\ncompodoc -p src/tsconfig.json -y your_theme_styles/\r\n```\r\n\r\nInside your folder you need to provide at least a style.css file with these 5 imports as below.\r\n\r\n```\r\n@import \"./reset.css\";\r\n@import \"./bootstrap.min.css\";\r\n@import \"./bootstrap-card.css\";\r\n@import \"./font-awesome.min.css\";\r\n@import \"./compodoc.css\";\r\n```\r\n\r\nCompodoc use [bootstrap](http://getbootstrap.com/) 3.3.7. You can customize Compodoc easily.\r\n\r\n[bootswatch.com](http://bootswatch.com/) can be a good starting point. If you want to override the default theme, just provide a bootstrap.min.css file, and it will override the default one.\r\n\r\n```\r\n└── your_theme_styles/\r\n    ├── style.css // the main css file with default imports\r\n    └── bootstrap.min.css // your bootstrap theme\r\n```\r\n\r\n### Documentation of each component\r\n\r\nA comment description in xxx.component.ts file, between JSDoc comments can be a little short.\r\n\r\nCompodoc search for a default README.md file inside the root folder of each component, and add it inside a tab in the component page.\r\n\r\n```\r\n└── my-component/\r\n    ├── my.component.ts\r\n    ├── my.component.spec.ts\r\n    ├── my.component.scss|css\r\n    ├── my.component.html\r\n    └── README.md\r\n```\r\n\r\nThe live demo as a component documented in that way : [TodoMVC Angular 2 Compodoc demo / todo component](https://compodoc.github.io/compodoc-demo-todomvc-angular2/components/TodoComponent.html)\r\n\r\n## Remark for routes\r\n\r\nFollow the style guide and provide a const of type 'Routes' :\r\n\r\n```\r\nconst APP_ROUTES: Routes = [\r\n    { path: 'about', component: AboutComponent },\r\n    { path: '', component: HomeComponent}\r\n];\r\n\r\n...\r\n\r\nRouterModule.forRoot(APP_ROUTES)\r\n```\r\n\r\n### Syntax highlighting in markdown files\r\n\r\nCompodoc use [Marked](https://github.com/chjj/marked) for markdown parsing and compiling to html. [highlight.js](highlightjs.org) has been added for supporting syntax highlighting.\r\n\r\nJust use a normal code block in your markdown with correct language : [Github help](https://help.github.com/articles/creating-and-highlighting-code-blocks/)\r\n\r\nThe integrated languages are : json, bash, javascript, markdown, html, typescript\r\n\r\n## Why this tool ?\r\n\r\nBecause we doesn't find our needs on existing tools. We want to have a single place where there is :\r\n- api documentation of code\r\n- component(s), directive(s), pipe(s), ... documentation\r\n- general documentation (\\*.md files)\r\n\r\n## Why not a SPA for outputed documentation ?\r\n\r\n[KISS principle](https://en.wikipedia.org/wiki/KISS_principle) or shortly __\"Keep it simple\"__. We think static html files are simpler than another SPA inside an \"SPA documentation\".\r\n\r\n## Roadmap\r\n\r\n- [ ] handle external markdown files as \"functional\" documentation\r\n- [ ] watch/recompile feature while serving documentation\r\n- [ ] support for Angular 1.5+ projects written in Typescript\r\n- [x] routes\r\n- [x] classes\r\n- [x] module(s) page(s) with comments\r\n- [x] component(s) page(s) with comments, API, class\r\n- [x] directives\r\n- [x] injectables\r\n- [x] pipes\r\n\r\n## Contributors\r\n\r\n[<img alt=\"vogloblinsky\" src=\"https://avatars3.githubusercontent.com/u/2841805?v=3&s=117\" width=\"117\">](https://github.com/vogloblinsky) |[<img alt=\"daniele-zurico\" src=\"https://avatars3.githubusercontent.com/u/3193095?v=3&s=117\" width=\"117\">](https://github.com/daniele-zurico)|\r\n:---: |:---: |:---: |:---: |:---: |:---: |\r\n[vogloblinsky](https://github.com/vogloblinsky) |[daniele-zurico](https://github.com/daniele-zurico)|\r\n\r\n## Resources\r\n\r\nInspired by stuff from [angular2-dependencies-graph](https://github.com/manekinekko/angular2-dependencies-graph), [ng-bootstrap](https://ng-bootstrap.github.io)\r\n\r\nLogo designed using [Book vector designed by Freepik](http://www.freepik.com/free-photos-vectors/book)\r\n\r\n## License\r\n\r\nEverything in this repo is MIT License unless otherwise specified.\r\n\r\nMIT © 2016 - [Vincent Ogloblinsky](http://www.vincentogloblinsky.com)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}